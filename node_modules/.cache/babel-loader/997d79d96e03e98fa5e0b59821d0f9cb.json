{"ast":null,"code":"var _jsxFileName = \"/Users/kenzieshimrock/Projects/kenzie-shimrock-fe-takehome/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(increment),\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"subtract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 6\n    }, this), isLogged ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"information dependent on true isLogged Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 18\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2+NMSjRT0EhNm72hx0oZCW4Wr7I=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kenzieshimrock/Projects/kenzie-shimrock-fe-takehome/src/App.js"],"names":["useSelector","useDispatch","increment","App","counter","state","isLogged","dispatch"],"mappings":";;;AACA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,WAAxB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,QAAQ,GAAGN,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAA,8BAAcG,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,OAAO,EAAI,MAAMG,QAAQ,CAACL,SAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAIEI,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2D,EAJrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAbQH,G;UAESH,W,EACCA,W,EACAC,W;;;KAJVE,G;AAeT,eAAeA,GAAf","sourcesContent":["\nimport {useSelector, useDispatch} from 'react-redux';\nimport {increment} from './actions';\nfunction App() {\n\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"App\">\n     <h1>Counter: {counter}</h1>\n     <button onClick = {() => dispatch(increment)}>add</button>\n     <button>subtract</button>\n     {isLogged ? <h1>information dependent on true isLogged Value</h1> : '' }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}