{"ast":null,"code":"/// state is false because want user to not be logged in when first starting application\n/// todo look into persistnce \nconst loggedReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SIGN IN':\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\nexport default loggedReducer;","map":{"version":3,"sources":["/Users/kenzieshimrock/Projects/kenzie-shimrock-fe-takehome/src/reducers/isLogged.js"],"names":["loggedReducer","state","action","type"],"mappings":"AACA;AACA;AACA,MAAMA,aAAa,GAAG,YAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,SAAL;AAAgB,aAAO,CAACF,KAAR;;AAChB;AAAS,aAAOA,KAAP;AAFb;AAIH,CALD;;AAOA,eAAeD,aAAf","sourcesContent":["\n/// state is false because want user to not be logged in when first starting application\n/// todo look into persistnce \nconst loggedReducer = (state = false, action) => {\n    switch(action.type) {\n        case 'SIGN IN': return !state;\n        default: return state;\n    }\n}\n\nexport default loggedReducer;"]},"metadata":{},"sourceType":"module"}