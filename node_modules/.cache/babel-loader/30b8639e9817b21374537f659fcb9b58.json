{"ast":null,"code":"var _jsxFileName = \"/Users/kenzieshimrock/Projects/kenzie-shimrock-fe-takehome/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers } from 'redux';\nimport rootReducer from './reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(rootReducer, window.__REDUX__DEVTOOLS__EXTENSION__ && window.__REUX_DEVTOOLS_EXTENSION__()); // // let store = createStore(reducer);\n// ///STORE (globalized state) holds all data or state for the application\n// /// ACTION INCREMENT -> function that returns an object\n// const increment = () => {\n//   return {\n//     type: 'INCREMENT'\n//   }\n// }\n// const decrement = () => {\n//   return {\n//     type: 'DECREMENT'\n//   }\n// }\n// /// REDUCER (how your actions transform your state to next state)\n// /// parameter 1: initial state\n// /// parameter 2: action\n// const counter = (state = 0, action) => {\n//   switch(action.type) {\n//     case 'INCREMENT': \n//       return state + 1;\n//     case 'DECREMENT': \n//       return state - 1;\n//     default:\n//       return null;\n//   }\n// }\n// let store = createStore(counter);\n// /// Display in console\n// store.subscribe(() => console.log(store.getState()));\n// /// DISPATCH -> how we execute this action via reducer\n// store.dispatch(increment());\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/kenzieshimrock/Projects/kenzie-shimrock-fe-takehome/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","combineReducers","rootReducer","store","window","__REDUX__DEVTOOLS__EXTENSION__","__REUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,YAAxB;;AAGA,MAAMC,KAAK,GAAGH,WAAW,CACvBE,WADuB,EAEvBE,MAAM,CAACC,8BAAP,IAAyCD,MAAM,CAACE,2BAAP,EAFlB,CAAzB,C,CAQA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;;AAEAT,QAAQ,CAACU,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAV,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers } from 'redux';\nimport rootReducer from './reducers';\n\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX__DEVTOOLS__EXTENSION__ && window.__REUX_DEVTOOLS_EXTENSION__()\n  );\n\n\n\n\n// // let store = createStore(reducer);\n// ///STORE (globalized state) holds all data or state for the application\n\n\n\n// /// ACTION INCREMENT -> function that returns an object\n// const increment = () => {\n//   return {\n//     type: 'INCREMENT'\n//   }\n// }\n\n// const decrement = () => {\n//   return {\n//     type: 'DECREMENT'\n//   }\n// }\n\n// /// REDUCER (how your actions transform your state to next state)\n// /// parameter 1: initial state\n// /// parameter 2: action\n// const counter = (state = 0, action) => {\n//   switch(action.type) {\n//     case 'INCREMENT': \n//       return state + 1;\n//     case 'DECREMENT': \n//       return state - 1;\n//     default:\n//       return null;\n//   }\n// }\n\n// let store = createStore(counter);\n\n\n// /// Display in console\n// store.subscribe(() => console.log(store.getState()));\n\n// /// DISPATCH -> how we execute this action via reducer\n\n// store.dispatch(increment());\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}